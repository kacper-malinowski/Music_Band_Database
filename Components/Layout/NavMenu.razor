@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedSessionStorage sessionStorage
@inject NavigationManager NavigationManager

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">BB_sheets_client</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="manage-db">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Manage Database
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="view-db">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> View Database
            </NavLink>
        </div>
        @if (!isLoggedIn) {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="register">
                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Register
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="login">
                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Log In
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {
    bool isLoggedIn;
    private bool isInitialized = false;

    protected override async Task OnAfterRenderAsync(bool firstRender) {
        if (firstRender) {
            var loginState = await sessionStorage.GetAsync<bool>("IsLoggedIn");
            isLoggedIn = loginState.Success && loginState.Value;
            isInitialized = true;
            StateHasChanged();

            NavigationManager.LocationChanged += async (sender, args) => {
                var loginState = await sessionStorage.GetAsync<bool>("IsLoggedIn");
                isLoggedIn = loginState.Success && loginState.Value;
                InvokeAsync(StateHasChanged);
            };
        }
    }
}
